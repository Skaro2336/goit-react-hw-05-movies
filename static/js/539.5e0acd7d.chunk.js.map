{"version":3,"file":"static/js/539.5e0acd7d.chunk.js","mappings":"mTAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,cACxBG,EADwB,OAIxBC,EAAWD,EAASE,KAAKC,QAJD,kBAKvBF,GALuB,2CAAH,qDAQhBG,EAAkB,mCAAG,WAAMC,GAAN,yFACTN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CQ,EAD/C,gCADS,cAC1BL,EAD0B,OAI1BG,EAAUH,EAASE,KAAKC,QAJE,kBAKzBA,GALyB,2CAAH,sDAQlBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,oBACmBV,EADnB,oBADQ,cACzBG,EADyB,OAIzBC,EAAWD,EAASE,KAJK,kBAKxBD,GALwB,2CAAH,sDAQjBO,EAAc,mCAAG,WAAMD,GAAN,yFACLR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BV,EAD3B,oBADK,cACtBG,EADsB,OAItBC,EAAWD,EAASE,KAAKO,KAJH,kBAKrBR,GALqB,2CAAH,sDAQdS,EAAiB,mCAAG,WAAMH,GAAN,yFACRR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BV,EAD3B,2BADQ,cACzBG,EADyB,OAIzBC,EAAWD,EAASE,KAAKC,QAJA,kBAKxBF,GALwB,2CAAH,qD,sGClCjBU,EAAOC,EAAAA,EAAAA,GAAH,kEAKJC,EAAOD,EAAAA,EAAAA,GAAH,2EAMJE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,+I,mBCevB,EAvBmB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACpB,OACE,SAACL,EAAD,UACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,SAACL,EAAD,WACE,UAACC,EAAD,CAAYK,GAAE,kBAAaD,EAAME,IAAjC,WACE,SAAC,MAAD,IADF,IACcF,EAAMG,UAFXH,EAAME,GADF,KAStB,C,sKChBYE,EAAgBV,EAAAA,EAAAA,KAAH,0FAMbW,EAAQX,EAAAA,EAAAA,MAAH,0GAOLY,EAASZ,EAAAA,EAAAA,OAAH,qU,SCqBnB,EAhCoB,SAAC,GAAkB,IAAhBa,EAAe,EAAfA,SACrB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,UAACN,EAAD,CAAeO,SAPI,SAAAC,GACnBA,EAAEC,iBACFN,EAASE,GACTC,EAAc,GACf,EAGC,WACE,SAACL,EAAD,CACES,WAAS,EACTC,KAAK,OACLC,YAAY,mBACZC,KAAK,QACLC,MAAOT,EACPU,SAlBqB,SAAAP,GACzBF,EAAcE,EAAEQ,OAAOF,MACxB,KAkBG,SAACZ,EAAD,CAAQS,KAAK,SAAb,sBAGL,E,oBCqBD,EA3CkB,WAChB,OAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeuB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BhB,EAAAA,EAAAA,WAAS,GAAvC,eAAOiB,EAAP,KAAgBC,EAAhB,KAEMvC,EAAQoC,EAAaI,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKzC,EAAL,CAIA,IAAM0C,EAAW,mCAAG,WAAM1C,GAAN,8EAClBuC,GAAW,GADO,mBAIMxC,EAAAA,EAAAA,IAAmBC,GAJzB,OAIVF,EAJU,OAMhBoC,EAAUpC,GACVyC,GAAW,GAPK,gDAShBI,QAAQC,MAAM,yBAAd,MACAV,EAAU,IACVK,GAAW,GAXK,yDAAH,sDAejBG,EAAY1C,EAjBX,CAkBF,GAAE,CAACA,IAEJ,IAAM6C,EAAkB,mCAAG,WAAM7C,GAAN,iEACzBqC,EAAgB,CAAErC,MAAAA,IADO,2CAAH,sDAIxB,OACE,iCACE,2CACA,SAAC,EAAD,CAAaoB,SAAUyB,IACtBP,GAAU,SAAC,IAAD,KAAqB,SAACQ,EAAA,EAAD,CAAYnC,OAAQA,MAGzD,C","sources":["Api/Api.js","components/MoviesList/MoviesListStyles.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchFormStyles.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '4b34cc9253777dc6fec5c1871a98544b';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const products = response.data.results;\n  return products;\n};\n\nexport const searchMoviesByName = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const products = response.data;\n  return products;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const products = response.data.cast;\n  return products;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const products = response.data.results;\n  return products;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 40px;\n`;\n\nexport const Item = styled.li`\n  margin: 10px;\n  padding: 10px;\n  color: #333;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  color: inherit;\n  gap: 10px;\n\n  &:hover {\n    color: red;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item, List, StyledLink } from './MoviesListStyles';\n\nimport { BsFilm } from 'react-icons/bs';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`}>\n            <BsFilm /> {movie.title}\n          </StyledLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  Movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 20px;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 40px;\n  padding: 10px 20px;\n  margin-top: 20px;\n  margin-left: 10px;\n  font-size: 16px;\n  background-color: #3f51b5;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #5f51b5;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormContainer, Input, Button } from './SearchFormStyles';\n\nconst SearchMovie = ({ onSearch }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSearch(searchTerm);\n    setSearchTerm('');\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <Input\n        autoFocus\n        type=\"text\"\n        placeholder=\"Enter movie name\"\n        name=\"query\"\n        value={searchTerm}\n        onChange={handleSearchChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </FormContainer>\n  );\n};\n\nSearchMovie.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchMovie;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesByName } from 'Api/Api';\nimport SearchMovie from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList';\n\nimport LoadingSpinner from 'components/Loader/Loader';\n\nconst MovieList = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const fetchMovies = async query => {\n      setLoading(true);\n\n      try {\n        const results = await searchMoviesByName(query);\n\n        setMovies(results);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setMovies([]);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies(query);\n  }, [query]);\n\n  const handleSearchChange = async query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <h2>Search movies</h2>\n      <SearchMovie onSearch={handleSearchChange} />\n      {loading ? <LoadingSpinner /> : <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default MovieList;\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","response","products","data","results","searchMoviesByName","query","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","List","styled","Item","StyledLink","Link","movies","map","movie","to","id","title","FormContainer","Input","Button","onSearch","useState","searchTerm","setSearchTerm","onSubmit","e","preventDefault","autoFocus","type","placeholder","name","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","loading","setLoading","get","useEffect","fetchMovies","console","error","handleSearchChange","MoviesList"],"sourceRoot":""}