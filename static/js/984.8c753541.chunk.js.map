{"version":3,"file":"static/js/984.8c753541.chunk.js","mappings":"mTAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,cACxBG,EADwB,OAIxBC,EAAWD,EAASE,KAAKC,QAJD,kBAKvBF,GALuB,2CAAH,qDAQhBG,EAAkB,mCAAG,WAAMC,GAAN,yFACTN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CQ,EAD/C,gCADS,cAC1BL,EAD0B,OAI1BG,EAAUH,EAASE,KAAKC,QAJE,kBAKzBA,GALyB,2CAAH,sDAQlBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,oBACmBV,EADnB,oBADQ,cACzBG,EADyB,OAIzBC,EAAWD,EAASE,KAJK,kBAKxBD,GALwB,2CAAH,sDAQjBO,EAAc,mCAAG,WAAMD,GAAN,yFACLR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BV,EAD3B,oBADK,cACtBG,EADsB,OAItBC,EAAWD,EAASE,KAAKO,KAJH,kBAKrBR,GALqB,2CAAH,sDAQdS,EAAiB,mCAAG,WAAMH,GAAN,yFACRR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BV,EAD3B,2BADQ,cACzBG,EADyB,OAIzBC,EAAWD,EAASE,KAAKC,QAJA,kBAKxBF,GALwB,2CAAH,qD,2KCnCjBU,EAAmBC,EAAAA,EAAAA,IAAH,0CAIhBC,EAAiBD,EAAAA,EAAAA,GAAH,oEAKdE,EAAaF,EAAAA,EAAAA,GAAH,6CAIVG,EAAaH,EAAAA,EAAAA,GAAH,wFAMVI,EAAeJ,EAAAA,EAAAA,EAAH,8CAIZK,EAAgBL,EAAAA,EAAAA,EAAH,4C,SCuB1B,EApCgB,WACd,OAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QAcR,OAZAe,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEOb,EAAAA,EAAAA,IAAkBH,GAFzB,OAEVP,EAFU,OAGhBoB,EAAWpB,GAHK,gDAKhBwB,QAAQC,QALQ,yDAAH,qDAQjBF,GACD,GAAE,CAAChB,KAGF,UAACI,EAAD,WACsB,IAAnBQ,EAAQO,SACP,4BACE,SAACb,EAAD,6BACA,SAACC,EAAD,UACGK,EAAQQ,KAAI,SAAAC,GAAM,OACjB,UAACb,EAAD,YACE,SAACC,EAAD,UAAeY,EAAOC,UACtB,SAACZ,EAAD,UAAgBW,EAAOE,YAFRF,EAAOG,GADP,SASL,IAAnBZ,EAAQO,SAAgB,oEAG9B,C","sources":["Api/Api.js","components/Reviews/ReviewsStyles.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '4b34cc9253777dc6fec5c1871a98544b';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const products = response.data.results;\n  return products;\n};\n\nexport const searchMoviesByName = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const products = response.data;\n  return products;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const products = response.data.cast;\n  return products;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const products = response.data.results;\n  return products;\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewsContainer = styled.div`\n  padding: 20px;\n`;\n\nexport const ReviewsHeading = styled.h2`\n  font-size: 24px;\n  margin-bottom: 20px;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n`;\n\nexport const ReviewItem = styled.li`\n  border: 1px solid #ccc;\n  padding: 10px;\n  margin: 10px 0;\n`;\n\nexport const ReviewAuthor = styled.p`\n  font-weight: bold;\n`;\n\nexport const ReviewContent = styled.p`\n  margin-top: 5px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'Api/Api';\nimport {\n  ReviewsContainer,\n  ReviewsHeading,\n  ReviewList,\n  ReviewItem,\n  ReviewAuthor,\n  ReviewContent,\n} from './ReviewsStyles';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieReview = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.error();\n      }\n    };\n    movieReview();\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length !== 0 && (\n        <div>\n          <ReviewsHeading>Movie Reviews</ReviewsHeading>\n          <ReviewList>\n            {reviews.map(review => (\n              <ReviewItem key={review.id}>\n                <ReviewAuthor>{review.author}</ReviewAuthor>\n                <ReviewContent>{review.content}</ReviewContent>\n              </ReviewItem>\n            ))}\n          </ReviewList>\n        </div>\n      )}\n      {reviews.length === 0 && <div>No reviews available for this movie.</div>}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","response","products","data","results","searchMoviesByName","query","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","ReviewsContainer","styled","ReviewsHeading","ReviewList","ReviewItem","ReviewAuthor","ReviewContent","useState","reviews","setReviews","useParams","useEffect","movieReview","console","error","length","map","review","author","content","id"],"sourceRoot":""}